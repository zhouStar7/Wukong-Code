{
	"name": "wk-code",
	"displayName": "Wukong Code",
	"description": "A whole dev team of AI agents in your editor.",
	"publisher": "RooVeterinaryInc",
	"version": "1.0.0",
	"icon": "assets/icons/icon.png",
	"galleryBanner": {
		"color": "#617A91",
		"theme": "dark"
	},
	"engines": {
		"vscode": "^1.84.0",
		"node": "20.18.1"
	},
	"author": {
		"name": "Wukong"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/RooVetGit/Roo-Code"
	},
	"homepage": "https://github.com/RooVetGit/Roo-Code",
	"categories": [
		"AI",
		"Chat",
		"Programming Languages",
		"Education",
		"Snippets",
		"Testing"
	],
	"keywords": [
		"cline",
		"claude",
		"dev",
		"mcp",
		"openrouter",
		"coding",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama",
		"roo code",
		"roocode"
	],
	"activationEvents": [
		"onLanguage",
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"submenus": [
			{
				"id": "wk-code.contextMenu",
				"label": "Wukong Code"
			},
			{
				"id": "wk-code.terminalMenu",
				"label": "Wukong Code"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "wk-code-ActivityBar",
					"title": "Wukong Code",
					"icon": "assets/icons/icon.svg"
				}
			]
		},
		"views": {
			"wk-code-ActivityBar": [
				{
					"type": "webview",
					"id": "wk-code.SidebarProvider",
					"name": ""
				}
			]
		},
		"commands": [
			{
				"command": "wk-code.plusButtonClicked",
				"title": "New Task",
				"icon": "$(add)"
			},
			{
				"command": "wk-code.mcpButtonClicked",
				"title": "MCP Servers",
				"icon": "$(server)"
			},
			{
				"command": "wk-code.promptsButtonClicked",
				"title": "Prompts",
				"icon": "$(notebook)"
			},
			{
				"command": "wk-code.historyButtonClicked",
				"title": "History",
				"icon": "$(history)"
			},
			{
				"command": "wk-code.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "wk-code.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "wk-code.openInNewTab",
				"title": "Open In New Tab",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.explainCode",
				"title": "Explain Code",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.fixCode",
				"title": "Fix Code",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.improveCode",
				"title": "Improve Code",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.addToContext",
				"title": "Add To Context",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.newTask",
				"title": "New Task",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.terminalAddToContext",
				"title": "Add Terminal Content to Context",
				"category": "Terminal"
			},
			{
				"command": "wk-code.terminalFixCommand",
				"title": "Fix This Command",
				"category": "Terminal"
			},
			{
				"command": "wk-code.terminalExplainCommand",
				"title": "Explain This Command",
				"category": "Terminal"
			},
			{
				"command": "wk-code.terminalFixCommandInCurrentTask",
				"title": "Fix This Command (Current Task)",
				"category": "Terminal"
			},
			{
				"command": "wk-code.terminalExplainCommandInCurrentTask",
				"title": "Explain This Command (Current Task)",
				"category": "Terminal"
			},
			{
				"command": "wk-code.setCustomStoragePath",
				"title": "Set Custom Storage Path",
				"category": "Wukong Code"
			},
			{
				"command": "wk-code.focusInput",
				"title": "Focus Input Field",
				"category": "Wukong Code"
			}
		],
		"menus": {
			"editor/context": [
				{
					"submenu": "wk-code.contextMenu",
					"group": "navigation"
				}
			],
			"wk-code.contextMenu": [
				{
					"command": "wk-code.addToContext",
					"group": "1_actions@1"
				},
				{
					"command": "wk-code.explainCode",
					"group": "1_actions@2"
				},
				{
					"command": "wk-code.fixCode",
					"group": "1_actions@3"
				},
				{
					"command": "wk-code.improveCode",
					"group": "1_actions@4"
				}
			],
			"terminal/context": [
				{
					"submenu": "wk-code.terminalMenu",
					"group": "navigation"
				}
			],
			"wk-code.terminalMenu": [
				{
					"command": "wk-code.terminalAddToContext",
					"group": "1_actions@1"
				},
				{
					"command": "wk-code.terminalFixCommand",
					"group": "1_actions@2"
				},
				{
					"command": "wk-code.terminalExplainCommand",
					"group": "1_actions@3"
				},
				{
					"command": "wk-code.terminalFixCommandInCurrentTask",
					"group": "1_actions@5"
				},
				{
					"command": "wk-code.terminalExplainCommandInCurrentTask",
					"group": "1_actions@6"
				}
			],
			"view/title": [
				{
					"command": "wk-code.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == wk-code.SidebarProvider"
				},
				{
					"command": "wk-code.promptsButtonClicked",
					"group": "navigation@2",
					"when": "view == wk-code.SidebarProvider"
				},
				{
					"command": "wk-code.mcpButtonClicked",
					"group": "navigation@3",
					"when": "view == wk-code.SidebarProvider"
				},
				{
					"command": "wk-code.historyButtonClicked",
					"group": "navigation@4",
					"when": "view == wk-code.SidebarProvider"
				},
				{
					"command": "wk-code.popoutButtonClicked",
					"group": "navigation@5",
					"when": "view == wk-code.SidebarProvider"
				},
				{
					"command": "wk-code.settingsButtonClicked",
					"group": "navigation@6",
					"when": "view == wk-code.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "wk-code.plusButtonClicked",
					"group": "navigation@1",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				},
				{
					"command": "wk-code.promptsButtonClicked",
					"group": "navigation@2",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				},
				{
					"command": "wk-code.mcpButtonClicked",
					"group": "navigation@3",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				},
				{
					"command": "wk-code.historyButtonClicked",
					"group": "navigation@4",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				},
				{
					"command": "wk-code.popoutButtonClicked",
					"group": "navigation@5",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				},
				{
					"command": "wk-code.settingsButtonClicked",
					"group": "navigation@6",
					"when": "activeWebviewPanelId == roo-cline.TabPanelProvider"
				}
			]
		},
		"configuration": {
			"title": "Wukong Code",
			"properties": {
				"roo-cline.allowedCommands": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"npm test",
						"npm install",
						"tsc",
						"git log",
						"git diff",
						"git show"
					],
					"description": "Commands that can be auto-executed when 'Always approve execute operations' is enabled"
				},
				"roo-cline.vsCodeLmModelSelector": {
					"type": "object",
					"properties": {
						"vendor": {
							"type": "string",
							"description": "The vendor of the language model (e.g. copilot)"
						},
						"family": {
							"type": "string",
							"description": "The family of the language model (e.g. gpt-4)"
						}
					},
					"description": "Settings for VSCode Language Model API"
				},
				"roo-cline.customStoragePath": {
					"type": "string",
					"default": "",
					"description": "Custom storage path. Leave empty to use the default location. Supports absolute paths (e.g. 'D:\\RooCodeStorage')"
				}
			}
		}
	},
	"scripts": {
		"build": "npm run vsix",
		"build:webview": "cd webview-ui && npm run build",
		"build:esbuild": "node esbuild.js --production",
		"compile": "tsc -p . --outDir out && node esbuild.js",
		"install:all": "npm install npm-run-all && npm-run-all -l -p install-*",
		"install-extension": "npm install",
		"install-webview": "cd webview-ui && npm install",
		"install-e2e": "cd e2e && npm install",
		"lint": "npm-run-all -l -p lint:*",
		"lint:extension": "eslint src --ext ts",
		"lint:webview": "cd webview-ui && npm run lint",
		"lint:e2e": "cd e2e && npm run lint",
		"check-types": "npm-run-all -l -p check-types:*",
		"check-types:extension": "tsc --noEmit",
		"check-types:webview": "cd webview-ui && npm run check-types",
		"check-types:e2e": "cd e2e && npm run check-types",
		"package": "npm-run-all -l -p build:webview build:esbuild check-types lint",
		"pretest": "npm run compile",
		"dev": "cd webview-ui && npm run dev",
		"test": "node scripts/run-tests.js",
		"test:extension": "jest",
		"test:webview": "cd webview-ui && npm run test",
		"prepare": "husky",
		"publish:marketplace": "vsce publish && ovsx publish",
		"publish": "npm run build && changeset publish && npm install --package-lock-only",
		"version-packages": "changeset version && npm install --package-lock-only",
		"vscode:prepublish": "npm run package",
		"vsix": "rimraf bin && mkdirp bin && npx vsce package --out bin",
		"watch": "npm-run-all -l -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"watch-tests": "tsc -p . -w --outDir out",
		"changeset": "changeset",
		"knip": "knip --include files",
		"clean": "npm-run-all -l -p clean:*",
		"clean:extension": "rimraf bin dist out",
		"clean:webview": "cd webview-ui && npm run clean",
		"clean:e2e": "cd e2e && npm run clean",
		"vscode-test": "npm-run-all -l -p vscode-test:*",
		"vscode-test:extension": "tsc -p . --outDir out && node esbuild.js",
		"vscode-test:webview": "cd webview-ui && npm run build",
		"update-contributors": "node scripts/update-contributors.js",
		"generate-types": "tsx scripts/generate-types.mts"
	},
	"dependencies": {
		"@anthropic-ai/bedrock-sdk": "^0.10.2",
		"@anthropic-ai/sdk": "^0.37.0",
		"@anthropic-ai/vertex-sdk": "^0.7.0",
		"@aws-sdk/client-bedrock-runtime": "^3.779.0",
		"@google-cloud/vertexai": "^1.9.3",
		"@google/generative-ai": "^0.18.0",
		"@mistralai/mistralai": "^1.3.6",
		"@modelcontextprotocol/sdk": "^1.7.0",
		"@types/clone-deep": "^4.0.4",
		"@types/pdf-parse": "^1.1.4",
		"@types/tmp": "^0.2.6",
		"@types/turndown": "^5.0.5",
		"@types/vscode": "^1.95.0",
		"@vscode/codicons": "^0.0.36",
		"axios": "^1.7.4",
		"cheerio": "^1.0.0",
		"chokidar": "^4.0.1",
		"clone-deep": "^4.0.1",
		"default-shell": "^2.2.0",
		"delay": "^6.0.0",
		"diff": "^5.2.0",
		"diff-match-patch": "^1.0.5",
		"fast-deep-equal": "^3.1.3",
		"fast-xml-parser": "^4.5.1",
		"fastest-levenshtein": "^1.0.16",
		"fzf": "^0.5.2",
		"get-folder-size": "^5.0.0",
		"globby": "^14.0.2",
		"i18next": "^24.2.2",
		"isbinaryfile": "^5.0.2",
		"js-tiktoken": "^1.0.19",
		"mammoth": "^1.8.0",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"node-ipc": "^12.0.0",
		"openai": "^4.78.1",
		"os-name": "^6.0.0",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"pkce-challenge": "^4.1.0",
		"posthog-node": "^4.7.0",
		"pretty-bytes": "^6.1.1",
		"puppeteer-chromium-resolver": "^23.0.0",
		"puppeteer-core": "^23.4.0",
		"reconnecting-eventsource": "^1.6.4",
		"say": "^0.16.0",
		"serialize-error": "^11.0.3",
		"simple-git": "^3.27.0",
		"sound-play": "^1.1.0",
		"string-similarity": "^4.0.4",
		"strip-ansi": "^7.1.0",
		"strip-bom": "^5.0.0",
		"tmp": "^0.2.3",
		"tree-sitter-wasms": "^0.1.11",
		"turndown": "^7.2.0",
		"web-tree-sitter": "^0.22.6",
		"zod": "^3.23.8"
	},
	"devDependencies": {
		"@changesets/cli": "^2.27.10",
		"@changesets/types": "^6.0.0",
		"@dotenvx/dotenvx": "^1.34.0",
		"@types/debug": "^4.1.12",
		"@types/diff": "^5.2.1",
		"@types/diff-match-patch": "^1.0.36",
		"@types/glob": "^8.1.0",
		"@types/jest": "^29.5.14",
		"@types/node": "20.x",
		"@types/node-ipc": "^9.2.3",
		"@types/string-similarity": "^4.0.2",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"@vscode/vsce": "^3.3.2",
		"esbuild": "^0.24.0",
		"eslint": "^8.57.0",
		"execa": "^9.5.2",
		"glob": "^11.0.1",
		"husky": "^9.1.7",
		"jest": "^29.7.0",
		"jest-simple-dot-reporter": "^1.0.5",
		"knip": "^5.44.4",
		"lint-staged": "^15.2.11",
		"mkdirp": "^3.0.1",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.4.2",
		"rimraf": "^6.0.1",
		"ts-jest": "^29.2.5",
		"tsup": "^8.4.0",
		"tsx": "^4.19.3",
		"typescript": "^5.4.5",
		"zod-to-ts": "^1.2.0"
	},
	"lint-staged": {
		"*.{js,jsx,ts,tsx,json,css,md}": [
			"prettier --write"
		],
		"src/**/*.{ts,tsx}": [
			"npx eslint -c .eslintrc.json --max-warnings=0 --fix"
		],
		"webview-ui/**/*.{ts,tsx}": [
			"npx eslint -c webview-ui/.eslintrc.json --max-warnings=0 --fix"
		]
	}
}
